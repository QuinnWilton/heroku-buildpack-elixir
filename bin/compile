#!/usr/bin/env bash

# If this var is set to true later on,
# then elixir and rebar will be rebuilt
erlang_changed=false
rebar_changed=false
elixir_changed=false

build_pack_path=$(cd $(dirname $(dirname $0)); pwd)

# Ensure dirs are present
mkdir -p $1 $2 $3

build_path=$(cd $1 && pwd)
cache_path=$(cd $2 && pwd)
env_path=$(cd $3 && pwd)


source ${build_pack_path}/lib/path_funcs.sh
source ${build_pack_path}/lib/misc_funcs.sh
source ${build_pack_path}/lib/erlang_funcs.sh
source ${build_pack_path}/lib/elixir_funcs.sh
source ${build_pack_path}/lib/app_funcs.sh
source ${build_pack_path}/lib/canonical_version.sh

mkdir $(platform_tools_path)

export_env_vars
export_mix_env
load_config
check_erlang_version "$erlang_version"

check_stack
clean_cache

download_erlang
install_erlang

download_elixir
install_elixir
restore_mix
install_hex
install_rebar

BASE_DIR=$PWD
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

GLEAM_DIR=$(elixir_path)
GLEAM_BIN=$GLEAM_DIR/bin/gleam

if [ ! -x $GLEAM_BIN ]; then
    curl -L "https://github.com/gleam-lang/gleam/releases/download/v0.11.2/gleam-v0.11.2-linux-amd64.tar.gz" --output gleam.tar.gz

    tar -xvf gleam.tar.gz -C $GLEAM_DIR/bin
fi

ls -lah $GLEAM_DIR/bin

# deprecated_hook, here for backwards compatibility
pre_compile_hook

restore_app
hook_pre_app_dependencies
app_dependencies
copy_hex

hook_pre_compile
compile_app
hook_post_compile

release_app

backup_app
backup_mix
write_profile_d_script
write_export

# deprecated_hook, here for backwards compatibility
post_compile_hook
